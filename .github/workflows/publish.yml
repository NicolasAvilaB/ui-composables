name: Publish Library to JitPack

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build and publish
        run: ./gradlew clean build publishToMavenLocal

      - name: Verify gradle.properties exists
        run: |
          if [ ! -f gradle.properties ]; then
            echo "gradle.properties file not found!"
            exit 1
          fi
          cat gradle.properties

      - name: Get version from gradle.properties
        id: get_version
        run: |
          VERSION=$(grep '^version=' gradle.properties | cut -d'=' -f2)
          if [ -z "$VERSION" ]; then
            echo "Version not found in gradle.properties!"
            exit 1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Authenticate with GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo $GITHUB_TOKEN | gh auth login --with-token

      - name: Create GitHub Tag
        id: create_tag
        run: |
          TAG_NAME="v${{ env.VERSION }}"
          git tag $TAG_NAME
          git push origin $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        run: |
          TAG_NAME="v${{ env.VERSION }}"
          gh release create $TAG_NAME --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload AAR to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./composes/build/outputs/aar/composes-release.aar
          asset_name: composable-library-${{ env.VERSION }}.aar
          asset_content_type: application/zip
